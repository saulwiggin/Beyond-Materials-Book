%***************************************
% FDTD Script for TM mode with PML
%***************************************

%***************************************
%Declare Variable
%***************************************
c = 3.0e8;
mu0 = 4.0*pi*1.0e-7;
eps0 = 8.854e-12;

%***************************************
% Setting up the Yee Grid
%***************************************
ie = 201;
je = 201;
ib = ie + 1;
jb = je + 1;
npmls = 10;
ip - ie - npmls;
jp = je - npmls;

dx = 2.0e-3;
dt = dx/c/sqrt(2);

is = (ie+1)/2;
js = (je+1)/2;

nmax = 2000;

aimp = sqrt(mu0/eps0);

step = ceil(nmax/10);

%********************************
%Source 
%********************************
freq = 3.0e9;
tau = 1/freq;
delay = 3*tau/dt;
N = round(tau/dt);
source = zeros(nmax,1);
ST=5;
for n=1:nmax
    if n<ST*N
        x = 1.0 - (ST*N-n)/(ST*N);
        g = 10.0*x^3 - 15.0*x^4 + 6.0*x^5;
        source(n) = g* sin(2*pi*freq*n*dt);
    else
        source(n) = exp(-((n-delay)*dt/tau)^2) * sin(2*pi*freq*n*dt);
    end
end

%Inialise field componants
Ezx = zeros(ib,jb); Ezy = zeros(ib,jb);
Ez = zeros(ib,jb); 
Hx = zeros(ib,je);
Hy = zeros(ie,jb);
caEzx = ones(ib,jb); cbEzx = ones(ib,jb).*(dt/eps_0/dx);
caEzy = ones(ib,jb); cbEzy = ones(ib,jb).*(dt/eps_0/dx);
daHx = ones(ib,je); dbHx = ones(ib,je).*(dt/mu_0/dx);
daHy = ones(ie,jb); dbHy = ones(ie,jb).*(dt/mu_0/dx);

% Set up Berenger's PML material
sigmax = -3.0*eps0*c0*log(1.0e-5)/(1.0e-5)/(2.0*dx*npmls);
rhomax = sigmax*(aimp^2);
for m=1:npmls
    sig(m) = sigmax*((m-0.5)/(npmls+0.5))^2;
    rho(m) = rhomax*(m/(npmls+0.5))^2;
end

% Setting up the PML layer...
for m = 1:npmls
    re = sig(m)*dt/eps0;
    rm = rho(m)*dt/mu0;
    ca(m) = exp(-re);
    cb(m) = -(exp(-re)-1.0)/sig(m)/dx;
    da(m) = exp(-rm);
    db(m) = -(exp(-rm)-1.0)/rho(m)/dx;
end

% Place the constants in PML later in simulation grid
for i =2:ie
    for j=2:npmls+1
        m=npmls+2-j;
        caEzy(i,j) = ca(m);
        cbEzy(i,j) = cb(m);
    end
    for j =jp+1:je
        m=j-jp;
        caEzy(i,j) = ca(m);
        cbEzy(i,j) = cb(m);
    end
end
% Front and Back Regions
for j=2:je
    for i=2:npmls+1
        m=npmls+2-i;
        caEzx(i,j) = ca(m);
        cbEzx(i,j) = cb(m);
    end
    for i = ip+1:ie
        m=i-ip;
        caEzx(i,j) = ca(m);
        cbEzx(i,j) = cb(m);
    end
end
% Now for the Hx Field
% Left and Right Simulation Regions
for i=2:ie
    for j=1:npmls
        m=npmls+1-j;
        daHx(i,j) = da(m);
        dbHx(i,j) = db(m);
    end
    for j =jp+1:je
        m=j-jp;
        daHx(i,j) = da(m);
        dbHx(i,j) = db(m);
    end
end
% Hy Fields
% Front and Back PML Regions 
for j=2:je
    for i=1:npmls
        m = npmls+1-i;
        daHy(i,j) = da(m);
        dbHy(i,j) = db(m);
    end
    for i=ip+1:ie
        m=i-ip;
        daHy(i,j) = da(m);
        dbHy(i,j) = db(m);
    end
end

% Time Stepping Loop
%First Configure the movie in matlab
figure('position', [10 250 940 360]); set(gcf, 'color', 'white');
rect = get(gcf,'position'); rect(1:2) =[0 0];

%Time-stepping loop 
for n=1:nmax
    
    %Ez field update
    Ezx(2:ie,2:je) = caEzx(2:ie,2:je).*Ezx(2:ie,2:je) + cbEzx(2:ie,2:je).*(Hy(2:ie,2:je) - Hy(1:ie-1,2:je));
    Ezy(2:ie,2:je) = caEzy(2:ie,2:je).*Ezy(2:ie,2:je) + cbEzy(2:ie,2:je).*(Hx(2:ie,1:je-1) - Hx(2:ie,2:je));
    Ez(2:ie,2:je) = Ezx(2:ie,2:je) + Ezy(2:ie,2:je);
    
    % Update the source
    Ez(is, js) = source(n);
    
    % H Field Update
    Hx(1:ib,1:je) = daHx(1:ib,1:je).*Hx(1:ib,1:je) + dbHx(1:ib,1:je).*(Ez(1:ib,1:je) - Ez(1:ib,2:jb));
    Hy(1:ie,1:jb) = daHy(1:ie,1:jb).*Hy(1:ie,1:jb) + dbHy(1:ie,1:jb).*(Ez(2:ib,1:jb) - Ez(1:ie,1:jb));
    
    % Visualise Field
    frame = 10;
    if mod(n,frame) ==0
        timestep = int2str(n);
        subplot(1,3,1);pcolor(Hx);shading interp; axis image; caxis([-3e-4 3e-4]); axis([0 jb 0 ie]);
        title(['Hx']); xlabel('y'); ylabel('x');
        subplot(1,3,2);pcolor(Hy); shading interp; axis image; caxis([-3e-4 3e-4]); axis([0 je 0 ib]);
        title(['Hy at time step ',timestep]); xlabel('y'); ylabel('x');
        subplot(1,3,3);pcolor(Ez); shading interp; axis image; caxis([-0.15 0.15]); axis([0 jb 0 ib]);
        title(['Ez']); xlabel('y'); ylabel('x');
        nn = n/frame;
        getframe(gcf,rect);
    end
    
    % Display Progess to GUI
    if (mod(n,step)==0)
        c=round(clock);
        disp(['Current time step: ',num2str(n-mod(n,step)),', ',num2str(n/nmax*100),'% completed at', num2str(c(4)),':',num2str(c(5)),':',num2str(c(6))]);
    end
    
end